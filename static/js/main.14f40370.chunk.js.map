{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Provider","dispatch","setState","value","this","props","children","axios","get","res","data","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","Contacts","Fragment","map","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","Header","branding","href","to","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14f40370.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n//import Contact from \"./components/Contact\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>{\" \"}\r\n                <i\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  className=\"fas fa-times\"\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n              </h4>\r\n              {this.state.showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for errors if fiels are empty\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear Input Fields after Submitting Contact\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contacts/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h3>{body}</h3>\r\n        <h3>{title}</h3>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    console.log(\r\n      fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n        .then(response => response.json())\r\n        .then(data =>\r\n          this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n          })\r\n        )\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\nimport Test from \"./components/test/Test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contacts/add\" component={AddContact}></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}